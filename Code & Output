import yfinance as yf
import pandas as pd
import numpy as np

# Define the international indices and equities
indices = ['^GSPC', '^IXIC', '^DJI', '^FTSE', '^N225']
equities = ['AAPL', 'GOOGL', 'MSFT', 'AMZN', 'FB']

# Define the start date
start_date = '2010-01-01'
end_date='2023-05-01'

 #Fetch the data
data = yf.download(indices + equities, start=start_date, end=end_date)['Adj Close']

import pandas as pd 
# Calculate daily returns
returns = data.pct_change()

# Calculate cumulative returns
cumulative_returns = (returns + 1).cumprod() - 1

# Calculate volatility
volatility = returns.std()

# Calculate maximum drawdowns
rolling_max = data.cummax()
drawdown = (data - rolling_max) / rolling_max
max_drawdowns = drawdown.min()

# Calculate Sharpe ratio and Sortino ratio
risk_free_rate = 0.0  # Assuming no risk-free rate
daily_risk = returns.std()
annual_risk = daily_risk * np.sqrt(252)
daily_return_avg = returns.mean()
sharpe_ratio = (daily_return_avg - risk_free_rate) / daily_risk
downside_returns = returns[returns < 0]
downside_risk = downside_returns.std()
sortino_ratio = (daily_return_avg - risk_free_rate) / downside_risk


# Print the results in tabulated form

# Create DataFrame for index metrics
index_metrics = pd.DataFrame({
    'Indices': indices,
    'Cumulative Returns': cumulative_returns.iloc[-1, :len(indices)].values,
    'Max Drawdowns': max_drawdowns[:len(indices)].values,
    'Volatility': volatility[:len(indices)].values,
    'Sharpe Ratio': sharpe_ratio[:len(indices)].values,
    'Sortino Ratio': sortino_ratio[:len(indices)].values
})
# Create DataFrame for equity metrics
equity_metrics = pd.DataFrame({
    'Equities': equities,
    'Cumulative Returns': cumulative_returns.iloc[-1, len(indices):].values,
    'Max Drawdowns': max_drawdowns[len(indices):].values,
    'Volatility': volatility[len(indices):].values,
    'Sharpe Ratio': sharpe_ratio[len(indices):].values,
    'Sortino Ratio': sortino_ratio[len(indices):].values
})


# Print the index metrics table
print("Index Metrics:")
print((index_metrics.T).to_string(header=False))


# Print the equity metrics table
print("\nEquity Metrics:")
print((equity_metrics.T).to_string(header=False))


------------------------------------------------------------------------------------------------------
                                      OUTPUT
--------------------------------------------------------------------------------------------------------
Index Metrics:
Indices                 ^GSPC      ^IXIC  ^DJI     ^FTSE     ^N225
Cumulative Returns  25.083426  14.750559   NaN  5.843728  12.00632
Max Drawdowns       -0.437972  -0.561453   NaN -0.443201 -0.371485
Volatility           0.017726   0.020564   NaN  0.016918  0.016201
Sharpe Ratio          0.06202   0.048976   NaN   0.04126   0.05384
Sortino Ratio        0.085221    0.06881   NaN  0.056704  0.074053

Equity Metrics:
Equities                AAPL     GOOGL      MSFT      AMZN        FB
Cumulative Returns  2.221683   0.43094  2.680068  4.296515  1.708307
Max Drawdowns      -0.370862 -0.366055  -0.33925 -0.363953 -0.317989
Volatility          0.010649  0.010087  0.011008  0.012771  0.012726
Sharpe Ratio        0.037077   0.01532  0.039711  0.044112  0.028988
Sortino Ratio       0.044086  0.019496  0.047827  0.054811  0.038367
